# Hide nginx version information.
server_tokens off;

log_format  timed_main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time $upstream_response_time $gzip_ratio';

# Workaround to prevent double logging
access_log off;

include i/tcp.conf;

include i/gzip.conf;

# upstreams
${BASEAUTH} include i/baseauth-upstream.conf;
${PORTFOLIO} include i/portfolio-upstream.conf;

server {
  access_log /var/log/nginx/access.log timed_main buffer=16k flush=5m;

  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

server {
  access_log /var/log/nginx/access.log timed_main buffer=16k flush=5m;

  # listen 80;
  listen 80 deferred; # Linux
  # listen 80 accept_filter=httpready; # FreeBSD

  # ipv6
  listen [::]:80 deferred;

  server_name ${NGINX_HOST};

  include i/certbot.conf;

  # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  access_log /var/log/nginx/access.log timed_main buffer=16k flush=5m;

  # listen 443 ssl http2;
  listen 443 deferred ssl http2; # Linux
  # listen 443 accept_filter=httpready ssl http2; # FreeBSD

  # ipv6
  listen [::]:443 deferred ssl http2;

  include i/client.conf;

  server_name ${NGINX_HOST};

  include i/keepalive.conf;

  # SSL
  ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
  include i/ssl.conf;

  # include i/hsts.conf;

  include i/resolver.conf;

  # rules
  include i/base-static.conf;
  ${BASEAUTH} include i/baseauth.conf;
  ${PORTFOLIO} include i/portfolio.conf;

}
